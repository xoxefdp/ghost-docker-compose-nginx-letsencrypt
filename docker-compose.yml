version: '3'
services:

  ghost:
    build: ./ghost
    image: ghost-alpine:${GHOST_VERSION}
    restart: always
    container_name: ${GHOST_CONTAINER_NAME}
    depends_on:
      - db
    environment:
      url: ${GHOST_URL}
      database__client: mysql
      database__connection__host: ${DB_HOST}
      database__connection__user: ${DB_USER}
      database__connection__password: ${DB_PASSWORD}
      database__connection__database: ${DB_NAME}
      mail__transport: SMTP
      mail__options__service: ${SMTP_SERVICE}
      mail__options__auth__user: ${SMTP_USER}
      mail__options__auth__pass: ${SMTP_PASSWORD}
      logging__level: ${LOGGING_LEVEL}
      logging__rotation__period : ${LOGGING_ROTATION_PERIOD}
    ports:
      - "${GHOST_PORT}:2368"
    volumes:
      - ${GHOST_DATA}:/var/lib/ghost/content
    entrypoint: ["/usr/local/bin/wait-for-it.sh", "mysql", "--", "docker-entrypoint.sh"]
    command: ["node", "current/index.js"]

  db:
    image: mysql:${MYSQL_VERSION}
    restart: always
    container_name: ${MYSQL_CONTAINER_NAME}
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${MYSQL_DATA}:/var/lib/mysql
      - ${MYSQL_CONFIG}:/etc/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    container_name: ${PMA_CONTAINER_NAME}
    depends_on:
      - db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${PMA_PORT}:80"

  nginx:
    image: nginx:${NGINX_VERSION}
    restart: always
    container_name: ${NGINX_CONTAINER_NAME}
    depends_on:
      - ghost
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"  
    environment:
      SERVER_NAME: ${SERVER_NAME}
    volumes:
       - ${NGINX_CONFIG_PATH}/letsencrypt:/etc/letsencrypt
       - ./www:/var/www/certbot

  certbot:
    image: certbot/certbot
    container_name: ${CERTBOT_CONTAINER_NAME}
    restart: unless-stopped
    volumes:
      - ${NGINX_CONFIG_PATH}/letsencrypt:/etc/letsencrypt
      - ./www:/var/www/certbot
      - ${NGINX_CONFIG_PATH}:/etc/nginx/conf.d
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
